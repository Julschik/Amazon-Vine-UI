Jawoll! 🧠💥
Hier kommt dein **vollständiger GPT-Prompt**, der direkt ein funktionierendes **klassisches Tampermonkey-Projekt** ausspuckt – inklusive:
✅ `JS`, ✅ `CSS`, ✅ `Loader`, ✅ `README.md`
Ready-to-use – keine Lücken, kein Nachjustieren.

---

## 🧠 **Vollständiger GPT Prompt für neue klassische UI-Projekte**

```txt
Ich möchte ein funktionierendes Tampermonkey-Projekt zur UI-Optimierung erstellen.

📌 Zielseite: [HIER DEINE ZIEL-URL EINFÜGEN]

Ich bevorzuge den **klassischen Ansatz ohne Tailwind**, also:
- JavaScript für DOM-Manipulation
- Klassisches CSS in externer Datei

Bitte liefere mir:

---

✅ 1. `project-ui.js`  
Ein JavaScript mit einer einfachen DOM-Manipulation, z. B. das Einfügen einer Info-Box am oberen Rand der Seite. Es soll eine CSS-Klasse wie `.ui-box` verwenden.

✅ 2. `project-ui.css`  
Eine CSS-Datei mit einem einfachen, sauberen Styling für `.ui-box`:
- Hintergrundfarbe
- Rahmen
- Abstände
- Lesbare Schrift

✅ 3. `README.md`  
Mit:
- Einleitung & Projektziel
- Setup mit Tampermonkey
- Lokale Entwicklung mit `live-server --port=8080 --cors`
- GitHub Deployment
- Beispielcode der Dateien
- Hinweise für Anfänger

✅ 4. Tampermonkey Loader (`loader.user.js`)  
Ein UserScript mit Fallback-Mechanismus:
- Wenn `http://127.0.0.1:8080/project-ui.js` erreichbar ist → lade lokal
- Wenn nicht → lade von GitHub:
```

[https://raw.githubusercontent.com/\[DEIN-GITHUB-USERNAME\]/\[REPO\]/main/project-ui.js](https://raw.githubusercontent.com/[DEIN-GITHUB-USERNAME]/[REPO]/main/project-ui.js)

```

Die Pfade und Dateinamen sollen automatisch angepasst sein, sodass das Projekt **direkt funktioniert**, sobald ich die Dateien lokal in einen Ordner lege, `live-server` starte und Tampermonkey das Loader-Skript installiert hat.

💡Wichtig:
- Keine Frameworks wie Tailwind, Bootstrap, Vue, etc.
- Nur **Vanilla JS und klassisches CSS**
- Der Loader muss beides (JS und CSS) dynamisch nachladen
- Verwende `HEAD`-Check zum Prüfen, ob localhost erreichbar ist

Benutze bitte als Beispielseite:
📌 `https://example.com/test-ui`

Und nenne alle Dateien im Stil: `example-ui.js`, `example-ui.css`, `loader.user.js`, `README.md`

Das Resultat soll copy-paste-ready sein. Keine leeren Stellen. Vollständiger Code in allen Dateien.
```

---

## ✅ Ergebnis: GPT gibt dir ein ganzes UI-Projekt

Du bekommst:

* ✔️ `example-ui.js` mit DOM-Logik
* ✔️ `example-ui.css` mit sauberen Styles
* ✔️ `loader.user.js` → Tampermonkey-ready mit Lokal-/GitHub-Fallback
* ✔️ `README.md` → Installationsanleitung Schritt für Schritt

---

Wenn du willst, kann ich dir das einmal beispielhaft für `https://example.com/test-ui` fertig rendern.

Sag einfach:

> **"Erzeuge jetzt ein fertiges Projekt für example.com"** 🚀

---

User-chat Eingabe: erzeuge ein fertiges project für direct.birkman.com

---

Yes Sir! 🧱
Hier ist dein **vollständig einsatzbereites Projekt** zur UI-Optimierung für:

> 📌 `https://direct.birkman.com`

Das Setup ist **klassisch** (Vanilla JS + externes CSS), dynamisch ladbar via `localhost` **oder GitHub**. Tampermonkey-ready, sofort testbar, 100 % copy-paste-bereit. Let’s roll. 🔨🤖

---

## 📁 Projektstruktur:

```
birkman-ui/
├── birkman-ui.js       ← JavaScript mit DOM-Optimierung
├── birkman-ui.css      ← Klassisches CSS-Styling
├── loader.user.js      ← Tampermonkey Loader
└── README.md           ← Anleitung & Infos
```

---

## 🔹 `birkman-ui.js`

```javascript
(function () {
  'use strict';

  window.addEventListener('load', () => {
    const container = document.body;

    const box = document.createElement("div");
    box.className = "birkman-ui-box";
    box.textContent = "🔧 UI optimiert durch das Birkman UI Script.";

    container.prepend(box);

    console.log("✅ Birkman UI Enhancement aktiviert.");
  });
})();
```

---

## 🔹 `birkman-ui.css`

```css
.birkman-ui-box {
  background-color: #e0f2f1;
  color: #004d40;
  padding: 12px 16px;
  margin: 20px auto;
  max-width: 800px;
  border: 2px solid #004d40;
  border-radius: 8px;
  font-size: 16px;
  font-family: Arial, sans-serif;
  text-align: center;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
}
```

---

## 🔹 `loader.user.js` (Tampermonkey)

```javascript
// ==UserScript==
// @name         Birkman UI Loader (klassisch)
// @namespace    https://birkman.com/
// @version      1.0
// @description  Lädt UI-Optimierung (CSS & JS) dynamisch – lokal oder von GitHub (Julschik/Birkman-UI) 🧱
// @match        https://direct.birkman.com/*
// @grant        none
// ==/UserScript==

(function () {
  const LOCAL_BASE_URL = 'http://127.0.0.1:8080';
  const REMOTE_BASE_URL = 'https://raw.githubusercontent.com/Julschik/Birkman-UI/main';
  const JS_FILENAME = 'birkman-ui.js';
  const CSS_FILENAME = 'birkman-ui.css';

  const testLocal = async () => {
    try {
      const res = await fetch(`${LOCAL_BASE_URL}/${JS_FILENAME}`, { method: 'HEAD', cache: 'no-store' });
      return res.ok;
    } catch {
      return false;
    }
  };

  testLocal().then((isLocalAvailable) => {
    const BASE_URL = isLocalAvailable ? LOCAL_BASE_URL : REMOTE_BASE_URL;
    console.log(`📦 Lade Birkman UI von: ${BASE_URL}`);

    const script = document.createElement("script");
    script.src = `${BASE_URL}/${JS_FILENAME}`;
    document.head.appendChild(script);

    const link = document.createElement("link");
    link.rel = "stylesheet";
    link.href = `${BASE_URL}/${CSS_FILENAME}`;
    document.head.appendChild(link);
  });
})();
```

---

## 🔹 `README.md`

```markdown
# Birkman UI Optimierung 🧱

Ein benutzerdefiniertes Tampermonkey-Script zur UI-Erweiterung auf [https://direct.birkman.com](https://direct.birkman.com)

---

## 🧩 Features

- Fügt eine visuelle Info-Box oben ein
- Styling über klassisches CSS (`birkman-ui.css`)
- Dynamisches Nachladen: lokal oder GitHub

---

## 📁 Projektstruktur

```

Birkman-UI/
├── birkman-ui.js       # UI-Logik (JavaScript)
├── birkman-ui.css      # Styling (klassisch)
├── loader.user.js      # Tampermonkey Loader
└── README.md           # Doku

````

---

## 🚀 Setup

### 1. Tampermonkey installieren
→ [https://www.tampermonkey.net](https://www.tampermonkey.net)

### 2. Lade `loader.user.js` in Tampermonkey

→ Es lädt `birkman-ui.js` & `birkman-ui.css` automatisch von:
- `http://127.0.0.1:8080` (wenn aktiv)
- GitHub (wenn nicht)

---

## 👨‍💻 Lokale Entwicklung

1. Installiere `live-server` falls noch nicht vorhanden:
   ```bash
   npm install -g live-server
````

2. Starte dein Projekt:

   ```bash
   cd /Users/julianhill/Birkman-UI
   live-server --port=8080 --cors
   ```

3. Öffne `https://direct.birkman.com`

---

## ☁️ GitHub Deployment

```bash
git init
git remote add origin https://github.com/Julschik/Birkman-UI
git add .
git commit -m "Initial commit"
git push -u origin main
```

Fertig – GitHub übernimmt, wenn der lokale Server nicht läuft.

---

## 🧪 Test

Öffne die Seite `https://direct.birkman.com`
→ Die Box erscheint oben
→ In der Console steht:
`✅ Birkman UI Enhancement aktiviert.`

---

## 🙋 Support

Erstellt von [Julian Hill](https://github.com/Julschik)

```

---

